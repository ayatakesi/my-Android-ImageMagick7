diff --git a/Android.mk b/Android.mk
index 5ab66994..44414177 100644
--- a/Android.mk
+++ b/Android.mk
@@ -52,6 +52,20 @@ LZMA_LIB_PATH                   := $(LOCAL_PATH)/xz-5.2.4
 BZLIB_LIB_PATH                  := $(LOCAL_PATH)/bzip-1.0.8
 LCMS_LIB_PATH                   := $(LOCAL_PATH)/liblcms2-2.9
 
+LIBBZ2_ENABLED        := true
+LIBFFTW_ENABLED       := true
+LIBFREETYPE2_ENABLED  := true
+LIBJPEG_TURBO_ENABLED := true
+LIBLZMA_ENABLED       := true
+LIBOPENJPEG_ENABLED   := true
+LIBPNG_ENABLED        := true
+LIBTIFF_ENABLED       := true
+LIBWEBP_ENABLED       := true
+LIBXML2_ENABLED       := true
+LIBZLIB_ENABLED       := true
+LIBLCMS2_ENABLED      := true
+BUILD_MAGICKWAND      := true
+
 #-------------------------------------------------------------
 # Include all modules
 #-------------------------------------------------------------
@@ -68,6 +82,9 @@ include $(MAKE_PATH)/libjpeg-turbo.mk
 # libopenjpeg
 include $(MAKE_PATH)/libopenjpeg.mk
 
+# libwebp
+include $(MAKE_PATH)/libwebp.mk
+
 # libtiff
 include $(MAKE_PATH)/libtiff.mk
 
@@ -77,9 +94,6 @@ include $(MAKE_PATH)/libpng.mk
 # libfreetype2
 include $(MAKE_PATH)/libfreetype2.mk
 
-# libwebp
-include $(MAKE_PATH)/libwebp.mk
-
 # libfftw
 include $(MAKE_PATH)/libfftw.mk
 
diff --git a/libxml2-2.9.9/encoding.c b/libxml2-2.9.9/encoding.c
index a3aaf10e..60f165b0 100644
--- a/libxml2-2.9.9/encoding.c
+++ b/libxml2-2.9.9/encoding.c
@@ -2394,7 +2394,6 @@ xmlCharEncOutput(xmlOutputBufferPtr output, int init)
 {
     int ret;
     size_t written;
-    size_t writtentot = 0;
     size_t toconv;
     int c_in;
     int c_out;
@@ -2451,7 +2450,6 @@ retry:
                             xmlBufContent(in), &c_in);
     xmlBufShrink(in, c_in);
     xmlBufAddLen(out, c_out);
-    writtentot += c_out;
     if (ret == -1) {
         if (c_out > 0) {
             /* Can be a limitation of iconv or uconv */
@@ -2536,7 +2534,6 @@ retry:
 	    }
 
             xmlBufAddLen(out, c_out);
-            writtentot += c_out;
             goto retry;
 	}
     }
@@ -2567,9 +2564,7 @@ xmlCharEncOutFunc(xmlCharEncodingHandler *handler, xmlBufferPtr out,
                   xmlBufferPtr in) {
     int ret;
     int written;
-    int writtentot = 0;
     int toconv;
-    int output = 0;
 
     if (handler == NULL) return(-1);
     if (out == NULL) return(-1);
@@ -2612,7 +2607,6 @@ retry:
                             in->content, &toconv);
     xmlBufferShrink(in, toconv);
     out->use += written;
-    writtentot += written;
     out->content[out->use] = 0;
     if (ret == -1) {
         if (written > 0) {
@@ -2622,8 +2616,6 @@ retry:
         ret = -3;
     }
 
-    if (ret >= 0) output += ret;
-
     /*
      * Attempt to handle error cases
      */
@@ -2700,7 +2692,6 @@ retry:
 	    }
 
             out->use += written;
-            writtentot += written;
             out->content[out->use] = 0;
             goto retry;
 	}
diff --git a/libxml2-2.9.9/xpath.c b/libxml2-2.9.9/xpath.c
index 5e3bb9ff..505ec825 100644
--- a/libxml2-2.9.9/xpath.c
+++ b/libxml2-2.9.9/xpath.c
@@ -10547,7 +10547,7 @@ xmlXPathCompFilterExpr(xmlXPathParserContextPtr ctxt) {
 
 static xmlChar *
 xmlXPathScanName(xmlXPathParserContextPtr ctxt) {
-    int len = 0, l;
+    int l;
     int c;
     const xmlChar *cur;
     xmlChar *ret;
@@ -10567,7 +10567,6 @@ xmlXPathScanName(xmlXPathParserContextPtr ctxt) {
 	    (c == '_') || (c == ':') ||
 	    (IS_COMBINING(c)) ||
 	    (IS_EXTENDER(c)))) {
-	len += l;
 	NEXTL(l);
 	c = CUR_CHAR(l);
     }
diff --git a/make/libicu4c.mk b/make/libicu4c.mk
index 21ec121f..64c9c1fe 100644
--- a/make/libicu4c.mk
+++ b/make/libicu4c.mk
@@ -246,11 +246,11 @@ LOCAL_CFLAGS := $(local_cflags) -DPIC -fPIC -frtti
 LOCAL_CFLAGS += -Os
 LOCAL_EXPORT_CFLAGS += -DU_STATIC_IMPLEMENTATION=1
 #LOCAL_MODULE_TAGS := optional
-LOCAL_MODULE    := libicuuc
+LOCAL_MODULE    := libicuuc-ImageMagick
 LOCAL_SRC_FILES := $(src_files)
 
 # when built in android, they require uconfig_local (because of android project), but we don't need this
-$(shell > $(ICU_COMMON_PATH)/unicode/uconfig_local.h echo /* Autogenerated stub file to make libicuuc build happy */) \
+$(shell > $(ICU_COMMON_PATH)/unicode/uconfig_local.h echo /\* Autogenerated stub file to make libicuuc build happy \*/) \
 
 ifeq ($(LIBXML2_ENABLED),true)
     include $(BUILD_STATIC_LIBRARY)
@@ -522,7 +522,7 @@ LOCAL_SDK_VERSION := 24
 #LOCAL_NDK_STL_VARIANT := stlport_static
 LOCAL_SRC_FILES += $(src_files)
 LOCAL_C_INCLUDES += $(c_includes)
-LOCAL_STATIC_LIBRARIES += libicuuc
+LOCAL_STATIC_LIBRARIES += libicuuc-ImageMagick
 LOCAL_EXPORT_C_INCLUDES += $(ICU_I18N_PATH)
 LOCAL_CPP_FEATURES := rtti
 LOCAL_CFLAGS += $(local_cflags) -DPIC -fPIC -frtti
@@ -530,7 +530,7 @@ LOCAL_CFLAGS += $(local_cflags) -DPIC -fPIC -frtti
 LOCAL_CFLAGS += -Os
 LOCAL_EXPORT_CFLAGS += -DU_STATIC_IMPLEMENTATION=1
 LOCAL_MODULE_TAGS := optional
-LOCAL_MODULE := libicui18n
+LOCAL_MODULE := libicui18n-ImageMagick
 ifeq ($(LIBXML2_ENABLED),true)
     include $(BUILD_STATIC_LIBRARY)
 endif
@@ -548,7 +548,7 @@ stubdata_path:= $(call my-dir)
 dat_file := $(notdir $(wildcard $(stubdata_path)/*.dat))
 
 include $(CLEAR_VARS)
-LOCAL_MODULE := icu-data
+LOCAL_MODULE := icu-data-ImageMagick
 LOCAL_MODULE_TAGS := optional
 LOCAL_MODULE_CLASS := ETC
 LOCAL_MODULE_PATH := $(TARGET_OUT)/usr/icu
@@ -557,7 +557,7 @@ LOCAL_SRC_FILES := $(dat_file)
 #include $(BUILD_PREBUILT)
 
 include $(CLEAR_VARS)
-LOCAL_MODULE := icu-data-host
+LOCAL_MODULE := icu-data-host-ImageMagick
 LOCAL_MODULE_TAGS := optional
 LOCAL_MODULE_CLASS := ETC
 LOCAL_MODULE_PATH := $(HOST_OUT)/usr/icu
diff --git a/make/libjpeg-turbo.mk b/make/libjpeg-turbo.mk
index d39dd414..a9be3db8 100644
--- a/make/libjpeg-turbo.mk
+++ b/make/libjpeg-turbo.mk
@@ -1,6 +1,6 @@
 include $(CLEAR_VARS)
 
-LOCAL_MODULE := libjpeg-turbo
+LOCAL_MODULE := libjpeg-turbo-ImageMagick
 LDFLAGS := -pie
 
 # prefer arm over thumb mode for performance gains
@@ -230,30 +230,30 @@ JCONFIG_FLAGS += \
     HAVE_UNSIGNED_SHORT
 
 JCONFIGINT_FLAGS += \
-    BUILD="20190814" \
-    PACKAGE_NAME="libjpeg-turbo" \
-    VERSION="2.0.2"
+    BUILD=\"20190814\" \
+    PACKAGE_NAME=\"libjpeg-turbo\" \
+    VERSION=\"2.0.2\"
 
 # originally defined in jconfigint.h, but the substitution has problems with spaces
 LOCAL_CFLAGS := \
     -DINLINE="inline __attribute__((always_inline))"
 
 # create definition file jconfig.h, needed in order to build
-$(shell echo /* autogenerated jconfig.h based on Android.mk var JCONFIG_FLAGS */ > $(JPEG_LIB_PATH)/jconfig.h)
+$(shell echo \/\* autogenerated jconfig.h based on Android.mk var JCONFIG_FLAGS \*\/ > $(JPEG_LIB_PATH)/jconfig.h)
 $(foreach name,$(JCONFIG_FLAGS), \
     $(if $(findstring =,$(name)), \
-        $(shell >>$(JPEG_LIB_PATH)/jconfig.h echo #ifndef $(firstword $(subst =, ,$(name)))) \
+        $(shell >>$(JPEG_LIB_PATH)/jconfig.h echo \#ifndef $(firstword $(subst =, ,$(name)))) \
     , \
-        $(shell >>$(JPEG_LIB_PATH)/jconfig.h echo #ifndef $(name)) \
+        $(shell >>$(JPEG_LIB_PATH)/jconfig.h echo \#ifndef $(name)) \
     ) \
-    $(shell >>$(JPEG_LIB_PATH)/jconfig.h echo #define $(subst =, ,$(name))) \
-    $(shell >>$(JPEG_LIB_PATH)/jconfig.h echo #endif) \
-    $(shell >> $(JPEG_LIB_PATH)/jconfig.h echo.) \
+    $(shell >>$(JPEG_LIB_PATH)/jconfig.h echo \#define $(subst =, ,$(name))) \
+    $(shell >>$(JPEG_LIB_PATH)/jconfig.h echo \#endif) \
+    $(shell >> $(JPEG_LIB_PATH)/jconfig.h echo) \
 )
 
 # create definition file jconfigint.h, needed in order to build
-$(shell >$(JPEG_LIB_PATH)/jconfigint.h echo /* autogenerated jconfigint.h based on Android.mk vars JCONFIGINT_FLAGS */)
-$(foreach name,$(JCONFIGINT_FLAGS),$(shell >>$(JPEG_LIB_PATH)/jconfigint.h echo #define $(subst =, ,$(name))))
+$(shell >$(JPEG_LIB_PATH)/jconfigint.h echo /\* autogenerated jconfigint.h based on Android.mk vars JCONFIGINT_FLAGS \*/)
+$(foreach name,$(JCONFIGINT_FLAGS),$(shell >>$(JPEG_LIB_PATH)/jconfigint.h echo \#define $(subst =, ,$(name))))
 
 ifeq ($(LIBJPEG_TURBO_ENABLED),true)
     include $(BUILD_STATIC_LIBRARY)
diff --git a/make/liblcms2.mk b/make/liblcms2.mk
index e1fd3b9c..29ca7919 100644
--- a/make/liblcms2.mk
+++ b/make/liblcms2.mk
@@ -10,6 +10,10 @@ LOCAL_C_INCLUDES := \
     $(LCMS_LIB_PATH)/include \
     $(LCMS_LIB_PATH)/src
 
+LOCAL_EXPORT_C_INCLUDES := \
+    $(LCMS_LIB_PATH) \
+    $(LCMS_LIB_PATH)/include \
+    $(LCMS_LIB_PATH)/src
 
 LOCAL_CFLAGS := \
     -DHAVE_FUNC_ATTRIBUTE_VISIBILITY=1 \
diff --git a/make/libmagick++-7.mk b/make/libmagick++-7.mk
index 5352ccb8..929396d8 100644
--- a/make/libmagick++-7.mk
+++ b/make/libmagick++-7.mk
@@ -12,7 +12,7 @@ LOCAL_C_INCLUDES  :=  \
 
 ifneq ($(STATIC_BUILD),true)
     LOCAL_LDFLAGS += -fexceptions
-    LOCAL_LDLIBS    := -L$(SYSROOT)/usr/lib -llog -lz
+    LOCAL_LDLIBS    := -llog -lz
 endif
 
 LOCAL_SRC_FILES := \
diff --git a/make/libmagickcore-7.mk b/make/libmagickcore-7.mk
index 81293b2d..87092e85 100644
--- a/make/libmagickcore-7.mk
+++ b/make/libmagickcore-7.mk
@@ -25,6 +25,8 @@ else ifeq ($(TARGET_ARCH_ABI),x86_64)
     
 endif
 
+LOCAL_SHARED_LIBRARIES += libstdc++
+LOCAL_EXPORT_C_INCLUDES += $(IMAGE_MAGICK)
 
 LOCAL_C_INCLUDES  += \
     $(IMAGE_MAGICK) \
@@ -45,10 +47,9 @@ LOCAL_C_INCLUDES  += \
     $(BZLIB_LIB_PATH) \
     $(LCMS_LIB_PATH)/include
 
-
 ifneq ($(STATIC_BUILD),true)
 # ignored in static library builds
-    LOCAL_LDLIBS    := -L$(SYSROOT)/usr/lib -llog -lz
+    LOCAL_LDLIBS    := -llog -lz
 endif
 
 
@@ -311,17 +312,17 @@ endif
 
 ifeq ($(LIBPNG_ENABLED),true)
     LOCAL_CFLAGS += -DMAGICKCORE_PNG_DELEGATE=1
-    LOCAL_STATIC_LIBRARIES += libpng
+    LOCAL_STATIC_LIBRARIES += libpng-ImageMagick
 endif
 
 ifeq ($(LIBJPEG_TURBO_ENABLED),true)
     LOCAL_CFLAGS += -DMAGICKCORE_JPEG_DELEGATE=1
-    LOCAL_STATIC_LIBRARIES += libjpeg-turbo
+    LOCAL_STATIC_LIBRARIES += libjpeg-turbo-ImageMagick
 endif
 
 ifeq ($(LIBTIFF_ENABLED),true)
     LOCAL_CFLAGS += -DMAGICKCORE_TIFF_DELEGATE=1
-    LOCAL_STATIC_LIBRARIES += libtiff
+    LOCAL_STATIC_LIBRARIES += libtiff-ImageMagick
 endif
 
 ifeq ($(LIBFREETYPE2_ENABLED),true)
@@ -333,7 +334,7 @@ ifeq ($(LIBWEBP_ENABLED),true)
     LOCAL_CFLAGS += \
         -DMAGICKCORE_WEBP_DELEGATE=1 \
         -DMAGICKCORE_WEBPMUX_DELEGATE=1
-    LOCAL_STATIC_LIBRARIES += libwebp libwebpmux
+    LOCAL_STATIC_LIBRARIES += libwebp-ImageMagick libwebpmux-ImageMagick
 endif
 
 ifeq ($(LIBOPENJPEG_ENABLED),true)
@@ -348,7 +349,7 @@ endif
 
 ifeq ($(LIBXML2_ENABLED),true)
     LOCAL_CFLAGS += -DMAGICKCORE_XML_DELEGATE=1
-    LOCAL_STATIC_LIBRARIES += libxml2
+    LOCAL_STATIC_LIBRARIES += libxml2-ImageMagick
 endif
 
 ifeq ($(LIBLZMA_ENABLED),true)
diff --git a/make/libmagickwand-7.mk b/make/libmagickwand-7.mk
index 7be2fb6c..0bbcca53 100644
--- a/make/libmagickwand-7.mk
+++ b/make/libmagickwand-7.mk
@@ -14,7 +14,7 @@ LOCAL_C_INCLUDES  :=  \
 
 # always ignored in static builds
 ifneq ($(STATIC_BUILD),true)
-    LOCAL_LDLIBS    := -L$(SYSROOT)/usr/lib -llog -lz
+    LOCAL_LDLIBS    := -llog -lz
 endif
 
 LOCAL_SRC_FILES := \
@@ -54,6 +54,29 @@ ifeq ($(OPENCL_BUILD),true)
     LOCAL_SHARED_LIBRARIES += libopencl
 endif
 
+LOCAL_SHARED_LIBRARIES += libstdc++
+
+ifeq ($(TARGET_ARCH_ABI),arm64-v8a)
+    LOCAL_EXPORT_C_INCLUDES += $(IMAGE_MAGICK)/configs/arm64
+    LOCAL_C_INCLUDES += $(IMAGE_MAGICK)/configs/arm64
+else ifeq ($(TARGET_ARCH_ABI),armeabi-v7a)  
+    LOCAL_EXPORT_C_INCLUDES += $(IMAGE_MAGICK)/configs/arm
+    LOCAL_C_INCLUDES += $(IMAGE_MAGICK)/configs/arm
+else ifeq ($(TARGET_ARCH_ABI),x86)
+    LOCAL_EXPORT_C_INCLUDES += $(IMAGE_MAGICK)/configs/x86
+    LOCAL_C_INCLUDES += $(IMAGE_MAGICK)/configs/x86
+else ifeq ($(TARGET_ARCH_ABI),x86_64)
+    LOCAL_EXPORT_C_INCLUDES += $(IMAGE_MAGICK)/configs/x86-64
+    LOCAL_C_INCLUDES += $(IMAGE_MAGICK)/configs/x86-64
+    
+    ifneq ($(STATIC_BUILD),true)
+        LOCAL_LDFLAGS += -latomic
+    endif
+    
+endif
+
+LOCAL_EXPORT_C_INCLUDES += $(IMAGE_MAGICK)
+
 ifeq ($(BUILD_MAGICKWAND),true)
     ifeq ($(STATIC_BUILD),true)
         LOCAL_STATIC_LIBRARIES := \
diff --git a/make/libpng.mk b/make/libpng.mk
index 24fb8acf..004b18b3 100644
--- a/make/libpng.mk
+++ b/make/libpng.mk
@@ -1,6 +1,6 @@
 include $(CLEAR_VARS)
 
-LOCAL_MODULE    := libpng
+LOCAL_MODULE    := libpng-ImageMagick
 LOCAL_MODULE_FILENAME := libpngobj
 
 # prefer arm over thumb mode for performance gains
@@ -30,6 +30,7 @@ ifeq ($(TARGET_ARCH_ABI), arm64-v8a)
 endif # TARGET_ARCH_ABI == arm64-v8a
 
 
+LOCAL_EXPORT_C_INCLUDES := $(PNG_LIB_PATH)
 LOCAL_C_INCLUDES := $(PNG_LIB_PATH)
 
 LOCAL_SRC_FILES += \
diff --git a/make/libtiff.mk b/make/libtiff.mk
index ca43f254..9c401b42 100644
--- a/make/libtiff.mk
+++ b/make/libtiff.mk
@@ -1,6 +1,6 @@
 include $(CLEAR_VARS)
 
-LOCAL_MODULE    := libtiff
+LOCAL_MODULE    := libtiff-ImageMagick
 LOCAL_MODULE_FILENAME := libtiffobj
 
 # prefer arm over thumb mode for performance gains
@@ -12,6 +12,9 @@ LOCAL_C_INCLUDES :=  \
     $(LZMA_LIB_PATH)/liblzma/api \
     $(WEBP_LIB_PATH)/src
 
+LOCAL_EXPORT_C_INCLUDES :=  \
+    $(TIFF_LIB_PATH)
+
 ifeq ($(LIBLZMA_ENABLED),true)
     LOCAL_CFLAGS += -DLZMA_SUPPORT=1
 endif
@@ -80,11 +83,11 @@ ifeq ($(LIBLZMA_ENABLED),true)
 endif
 
 ifeq ($(LIBJPEG_TURBO_ENABLED),true)
-    LOCAL_STATIC_LIBRARIES += libjpeg-turbo
+    LOCAL_STATIC_LIBRARIES += libjpeg-turbo-ImageMagick
 endif
 
 ifeq ($(LIBWEBP_ENABLED),true)
-    LOCAL_STATIC_LIBRARIES += libwebp libwebpmux
+    LOCAL_STATIC_LIBRARIES += libwebp-ImageMagick libwebpmux-ImageMagick
 endif
 
 
diff --git a/make/libwebp.mk b/make/libwebp.mk
index 462c763a..9f15c3c1 100644
--- a/make/libwebp.mk
+++ b/make/libwebp.mk
@@ -186,7 +186,7 @@ ifeq ($(USE_CPUFEATURES),yes)
   LOCAL_STATIC_LIBRARIES := cpufeatures
 endif
 
-LOCAL_MODULE := webpdecoder_static
+LOCAL_MODULE := webpdecoder_static-ImageMagick
 
 ifeq ($(LIBWEBP_ENABLED),true)
     include $(BUILD_STATIC_LIBRARY)
@@ -199,7 +199,7 @@ endif
 
 include $(CLEAR_VARS)
 
-LOCAL_MODULE    := libwebp
+LOCAL_MODULE    := libwebp-ImageMagick
 
 LOCAL_SRC_FILES := \
     $(dsp_enc_srcs) \
@@ -247,9 +247,9 @@ LOCAL_C_INCLUDES := \
 # prefer arm over thumb mode for performance gains
 LOCAL_ARM_MODE := arm
 
-LOCAL_MODULE := libwebpmux
+LOCAL_MODULE := libwebpmux-ImageMagick
 
-LOCAL_STATIC_LIBRARIES := libwebp
+LOCAL_STATIC_LIBRARIES := libwebp-ImageMagick
 ifeq ($(LIBWEBP_ENABLED),true)
     include $(BUILD_STATIC_LIBRARY)
 endif
diff --git a/make/libxml2.mk b/make/libxml2.mk
index 63b61f93..ace5dbc4 100644
--- a/make/libxml2.mk
+++ b/make/libxml2.mk
@@ -1,6 +1,6 @@
 include $(CLEAR_VARS)
 
-LOCAL_MODULE := libxml2
+LOCAL_MODULE := libxml2-ImageMagick
 
 LOCAL_CFLAGS := \
     -DLIBXML_THREAD_ENABLED=1 \
@@ -110,8 +110,8 @@ LOCAL_SRC_FILES := \
 
 LOCAL_STATIC_LIBRARIES := \
     libiconv \
-    libicuuc \
-    libicui18n
+    libicuuc-ImageMagick \
+    libicui18n-ImageMagick
 
 ifeq ($(LIBLZMA_ENABLED),true)
     LOCAL_STATIC_LIBRARIES += liblzma
diff --git a/make/magick.mk b/make/magick.mk
index 3ba4b1d7..5471608a 100644
--- a/make/magick.mk
+++ b/make/magick.mk
@@ -18,7 +18,7 @@ LOCAL_C_INCLUDES  :=  \
     $(FREETYPE_LIB_PATH)/include
 
 
-LOCAL_LDLIBS    := -L$(SYSROOT)/usr/lib -llog -lz
+LOCAL_LDLIBS    := -llog -lz
 LOCAL_SRC_FILES := \
     $(IMAGE_MAGICK)/utilities/magick.c \
 
